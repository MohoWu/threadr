west.east = str_sub(longitude, start = -1))
View(a)
a <- data.ozone %>%
select(time.gps, date.gps, o3, temp)
View(a)
data.ozone <- read.csv('355255040076771.dat')
View(data.ozone)
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date.parse <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date.parse <- dmy_hms(data.ozone$date.parse)
View(data.ozone)
View(data.ozone)
data.ozone <- read.csv('355255040076771.dat')
View(data.ozone)
# Load data
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Remove na dates
data.ozone <- subset(data.ozone, !is.na(date))
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date.parse) >= 2015)
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015)
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date.parse, '1 min')
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '1 min')
View(data.ozone)
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
View(data.ozone)
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
View(data.ozone)
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
View(data.ozone)
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
View(data.ozone)
# Load packages
library(threadr)
library(dplyr)
library(ggplot2)
library(stringr)
library(lubridate)
# library(plyr)
# Set global options
options(stringsAsFactors = FALSE)
# Set working directory
setwd('~/Dropbox/R/package_development/threadr')
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
View(data.ozone)
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
View(time.split)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
View(data.ozone)
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
View(time.split)
View(data.ozone)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
View(data.ozone)
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
View(data.ozone)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
View(data.ozone)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015)
View(data.ozone)
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015 & year(date) <= 2020)
View(data.ozone)
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015 & year(date) <= 2016)
View(data.ozone)
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015 & year(date) < 2016)
View(data.ozone)
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015 & date >= Sys.time())
View(data.ozone)
# Load data
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2015 & date <= Sys.time())
View(data.ozone)
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '1 min')
View(data.ozone)
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
View(data.ozone.summary)
# Set global options
options(stringsAsFactors = FALSE)
# Set working directory
setwd('~/Dropbox/R/package_development/threadr')
# Load data
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
year(date) >= 2013 & date <= Sys.time())
View(data.ozone)
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '1 min')
View(data.ozone)
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = 'min', start.unit = 'hour', id.var = c('sensor', 'site'))
View(data.ozone.summary.pad)
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '5 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '5 min', start.unit = 'hour', id.var = c('sensor', 'site'))
View(data.ozone.summary.pad)
data.ozone.summary.pad %>%
ggplot(aes(date, o3))
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + goem_line()
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
# Load data
data.ozone <- read.csv('355255040076771.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '5 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '5 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
# Load data
data.ozone <- read.csv('358281005419951.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '5 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '5 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
# Load data
data.ozone <- read.csv('355255040071012.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '5 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '5 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
# Load data
data.ozone <- read.csv('355255040071012.dat')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '15 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '15 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
data.ozone <- read.csv('355255040071012.dat.bz2')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '15 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '15 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
View(data.ozone.summary.pad)
# Load data
data.ozone <- read.csv('355255040071012.dat.bz2')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '10 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '10 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
ggplot(aes(date, o3)) + geom_line()
# Load data
data.ozone <- read.csv('355255040071012.dat.bz2')
data.ozone <- subset(data.ozone, select =
c(GPS.Time, GPS.Date, Ozone.ppm., Temperature.degC.))
names(data.ozone) <- c('time', 'date', 'o3', 'temp')
# Clean date
# Add leading zeros
data.ozone$date <- str_pad(data.ozone$date, width = 6, pad = '0')
# Split date by .
time.split <- str_split_fixed(data.ozone$time, '\\.', n = 2)
# Get the two vectors
data.ozone$fractional.seconds <- time.split[, 2]
data.ozone$time <- time.split[, 1]
# Pad time with leading zeros
data.ozone$time <- str_pad(data.ozone$time, width = 6, pad = '0')
# Get all date pieces together
data.ozone$date <- str_c(data.ozone$date, ' ', data.ozone$time,
'.', data.ozone$fractional.seconds)
# Parse date string
data.ozone$date <- dmy_hms(data.ozone$date)
# Drop other variables
data.ozone <- subset(data.ozone, select = c(date, o3),
date >= ymd('2014-07-01') & date <= Sys.time())
# Round dates to nearest interval
data.ozone$date <- threadr::roundDateToInterval(data.ozone$date, '1 min')
# Aggregate duplicated dates
data.ozone.summary <- data.ozone %>%
group_by(date) %>%
summarise(o3 = mean(o3),
n = n()) %>%
mutate(o3 = o3 * 1000,
o3 = round(o3),
sensor = 'five',
site = 'auckland')
data.ozone.summary.pad <- data.ozone.summary %>%
timePad(pad.time = '1 min', start.unit = 'hour', id.var = c('sensor', 'site'))
#
data.ozone.summary.pad %>%
ggplot(aes(date, o3)) + geom_line()
View(data.ozone.summary.pad)
