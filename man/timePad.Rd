% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/timePad.R
\name{timePad}
\alias{timePad}
\title{Function to pad timeseries.}
\usage{
timePad(x, pad.time = "10 min", start.unit = NULL, id.var = NULL,
  dplyr.join = TRUE, remove.final = FALSE)
}
\arguments{
\item{x}{A data frame including parsed dates}

\item{pad.time}{Frequency of time padding}

\item{start.unit}{A date unit where the padded timeseries should begin and
end. Examples are 'hour', 'day', 'month', and 'year'.}

\item{id.var}{Should identifying variables be applied to the data post-
pad?}

\item{dplyr.join}{Should dplyr::left_join be used rather than base:merge for
the date sequence join? dplyr::left_join performs better}

\item{remove.final}{Should the final observation of the padded timeseries be
removed? Sometimes if makes sense to remove the last observation if the
end date has been rounded forwards.}
}
\description{
timePad use is analogous to openair::timeAverage, however the aggregation
values does not occur. timePad does not drop non-numerical variables, can
include identifiers post-pad, and can start and end a padded timeseries at a
'nice place'. For example at the beginning of an hour.
}
\details{
timePad pads a timeseries by calculating the maximum and minimum dates within
a timeseries and then generating a uniform date sequence between the maximum
and minimim dates. This date sequence is then joined to the inputed data
frame and the missing values are represented as NA.

timePad uses dplyr::left_join for the date join because testing has
demonstrated this function performs much faster than base::merge. However,
users can still opt to use base::merge because dplyr is still reporting many
bugs.
}
\examples{
# Pad time series so every minute is present
\dontrun{
data.nelson.pad <- timePad(data.nelson, pad.time = 'minute',
start.unit = 'day')
}
}
\author{
Stuart K. Grange
}

